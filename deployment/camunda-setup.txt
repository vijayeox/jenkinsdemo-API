Prerequisites installation on server for camunda

sudo apt install bash - mostly already there so it will upgrade
sudo apt install ca-certificates - might be there and may upgrade
sudo apt install tar
sudo apt install wget
sudo apt install tzdata  (for timezone data)
sudo apt install tini (no package found for now in ubuntu 18.04)(digged in to found its used for containers to managing processes. Mostly as a init for containers)
sudo apt install xmlstarlet
#required for ssl
sudo apt-get install libssl1.0-dev

#Step for downloading a installing camunda on server
#make a temp dir for camunda setup download

mkdir ~/camunda-setup

#make camunda installation folder

sudo mkdir /opt/oxzion/camunda

#download camunda to ~/camunda-setup folder as camunda.tar.gz file from the camunda repo

wget --progress=bar:force:noscroll -O /home/ubuntu/camunda-setup/camunda.tar.gz "https://camunda.org/release/camunda-bpm/tomcat/7.9/camunda-bpm-tomcat-7.9.0.tar.gz"

#extract the contents of camunda.tar.gz to the installation dir i.e /opt/oxzion/camunda

sudo tar xzf /home/ubuntu/camunda-setup/camunda.tar.gz -C /opt/oxzion/camunda server --strip-components=2

#then download the mysql connector library for camunda from maven repo

wget -O /home/ubuntu/camunda-setup/mysql-connector-java-5.1.21.jar "https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.21/mysql-connector-java-5.1.21.jar"

#copy the downloaded mysql library to camunda library
sudo cp /home/ubuntu/camunda-setup/mysql-connector-java-5.1.21.jar /opt/oxzion/camunda/lib

#Configuration settings to be updated in server.xml in /opt/oxzion/camunda/conf/server.xml

update the following parameters
1) driverClassName
2)url
3)username for camunda db
4)password for camunda db
5)port from 8080 to 8090

Below is the difference of the default server.xml and working copy of server.xml. Look for the pattern and update the required parameters

61,62c61,62
<               driverClassName="org.h2.Driver" 
<               url="jdbc:h2:./camunda-h2-dbs/process-engine;MVCC=TRUE;TRACE_LEVEL_FILE=0;DB_CLOSE_ON_EXIT=FALSE"
---
>               driverClassName="com.mysql.jdbc.Driver" 
>               url="jdbc:mysql://localhost:3306/process-engine"
64,65c64,65
<               username="sa"  
<               password="sa"
---
>               username="camunda"  
>               password="Camundapasswd321!"
103c103
<     <Connector port="8080" protocol="HTTP/1.1"
---
>     <Connector port="8090" protocol="HTTP/1.1"


#add the below Environment variable in /opt/oxzion/camunda/bin/catalina.sh right above "# OS specific support.  $var _must_ be set to either true or false" comment

JAVA_OPTS="-Xmx768m -XX:MaxMetaspaceSize=256m"
export BASE_DB_URL=jdbc:mysql://localhost:3306/oxzionapi 
export API_DB_URL=jdbc:mysql://localhost:3306/oxzionapi
export DB_USERNAME=apiuser 
export DB_PASSWORD=Apipasswd321! 
export DB_DRIVER=com.mysql.jdbc.Driver
JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64


#create camunda service

copy the camunda.service file in deployment/etc/systemd/system/camunda.service in codebase to /etc/systemd/system/camunda.service

#enable camunda service

sudo systemctl enable camunda.service


#database setup

create database for camel quartz and camunda as process-engine with camunda user and quartzuser

#login as root to mysql

create database quartz_db;
create database `process-engine`;

grant all privileges on `quartz_db`.* to 'quartzuser'@'%' identified by 'password';
grant all privileges on `process-engine`.* to 'camunda'@'	%' identified by 'password';


#run these two privileges as root for deploy api to work

grant select on `mysql`.* to 'apiuser'@'%';
grant all privileges on `%\_\_\_%` . * to 'apiuser'@'%';

#Alter data types in the process-engine database using the following sql queries. This is a one time update. Run the queries one by one to avoid conflict in syntax. Please note these queries can only execute successfully when process-engine database is populated(migrations) after the first time camunda runs.

ALTER TABLE ACT_HI_DETAIL MODIFY COLUMN TEXT_ teXT;
ALTER TABLE ACT_HI_VARINST MODIFY COLUMN TEXT_ teXT;
ALTER TABLE ACT_RU_VARIABLE MODIFY COLUMN TEXT_ teXT;

#give these filesystem permissions(one-time only)

chmod 755 -R /opt/oxzion/view/gui
chmod 777 -R /opt/oxzion/view/bos
chmod 777 /opt/oxzion/view/apps

#make a .npm and .config folder in /var/www and give ownership to www-data
mkdir /var/www/.npm
mkdir /var/www/.config
chown www-data:www-data /var/www/.npm
chown www-data:www-data /var/www/.config

for deploy app api to work make sure you give following permission

mkdir /opt/oxzion/eoxapps
chmod 777 -R /opt/oxzion/eoxapps

chown oxzion:oxzion /opt/oxzion/camunda/ -R

create api symlinks like file_docs etc.

sudo apt install jq

cd /var/lib/oxzion/api/
mkdir forms delegate file_docs import